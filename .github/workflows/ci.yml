# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET Aspire

on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - "**/*.md"
      - "**/*.gitignore"
      - "**/*.gitattributes"
      
  pull_request:
    branches: [ "main" ]
    paths-ignore:
      - "**/*.md"
      - "**/*.gitignore"
      - "**/*.gitattributes"
      
  workflow_dispatch:

jobs:
  build-aspire:

    runs-on: ubuntu-latest
    name: Build Apire
    
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: true
      DOTNET_NOLOGO: true
      DOTNET_MULTILEVEL_LOOKUP: false
      ASPIRE_ALLOW_UNSECURED_TRANSPORT: true

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
  
    - name: Print .NET info
      run: dotnet --info

    - uses: actions/setup-node@v4
      with:
        node-version: '20.x'

    - name: Install Angular CLI
      run: npm install -g @angular/cli 

    - name: Install & trust dev-certs
      id: install-dev-certs
      run: dotnet dev-certs https --trust

    - name: Install .NET Aspire workload
      run: dotnet workload install aspire
      
    - name: Restore dependencies
      run: dotnet restore "PO.Host"
      
    - name: Build
      run: dotnet build "PO.Host" --no-restore

    - name: Test
      id: test
      # Note that the space after the last double dash (--) is intentional
      run: dotnet test "PO.Host" --no-build --verbosity normal
        --logger console --logger trx --logger html --logger GitHubActions
        --results-directory ./TestResults --blame
        -- 
        RunConfiguration.CollectSourceInformation=true
    
    - name: Publish Test Results
      if: success() || steps.test.conclusion == 'failure'
      uses: actions/upload-artifact@v4
      with:
        name: TestResults
        path: PO.Host/TestResults
        
  build-backoffice:

    runs-on: ubuntu-latest
    name: Build Backoffice

    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        
    - name: Install Angular CLI
      run: npm install -g @angular/cli
    
    - name: Install dependencies
      run: npm ci
      working-directory: web/back-office

    - name: Build dependencies
      run: npm run build:libs
      working-directory: web/back-office
        
    # - name: Run tests
    #   run: npm run test
    #   working-directory: web/back-office

    - name: Run lint
      run: npm run lint
      working-directory: web/back-office
      
    - name: Build
      run: npm run build
      working-directory: web/back-office

