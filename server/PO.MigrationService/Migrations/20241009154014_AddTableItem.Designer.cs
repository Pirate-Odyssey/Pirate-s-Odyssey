// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PO.Infrastructure;

#nullable disable

namespace PO.MigrationService.Migrations
{
    [DbContext(typeof(PirateOdysseyContext))]
    [Migration("20241009154014_AddTableItem")]
    partial class AddTableItem
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PO.Domain.Entities.Items.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("Rarity")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Item", (string)null);

                    b.HasDiscriminator<string>("Type").HasValue("Trash");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("PO.Domain.Entities.Items.ItemStat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Stats")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.ToTable("ItemStat", (string)null);
                });

            modelBuilder.Entity("PO.Domain.Entities.Items.Equipment", b =>
                {
                    b.HasBaseType("PO.Domain.Entities.Items.Item");

                    b.Property<int>("Armor")
                        .HasColumnType("int");

                    b.Property<string>("EquipmentType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasDiscriminator().HasValue("Equipment");
                });

            modelBuilder.Entity("PO.Domain.Entities.Items.Weapon", b =>
                {
                    b.HasBaseType("PO.Domain.Entities.Items.Item");

                    b.Property<double>("Damage")
                        .HasColumnType("float");

                    b.Property<double>("Speed")
                        .HasColumnType("float");

                    b.Property<bool>("TwoHanded")
                        .HasColumnType("bit");

                    b.HasDiscriminator().HasValue("Weapon");
                });

            modelBuilder.Entity("PO.Domain.Entities.Items.ItemStat", b =>
                {
                    b.HasOne("PO.Domain.Entities.Items.Item", "Item")
                        .WithMany("Stats")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");
                });

            modelBuilder.Entity("PO.Domain.Entities.Items.Item", b =>
                {
                    b.Navigation("Stats");
                });
#pragma warning restore 612, 618
        }
    }
}
